<launch>
  <arg name="base" default="$(optenv TURTLEBOT_BASE kobuki)"/>
  <arg name="battery" value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>
  <arg name="stacks" default="$(optenv TURTLEBOT_STACKS hexagon)"/>
  <arg name="3d_sensor" default="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>
  <arg name="model" default="model_base"/>
  <arg name="init_pose"/>

  <include file="$(find multirobot_map_merge_tests)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
    <arg name="model" value="$(arg model)"/>
    <arg name="init_pose" value="$(arg init_pose)"/>
  </include>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base_node" output="screen">
    <remap from="map" to="/map" />
    <param name="controller_frequency" value="10.0" />
    <rosparam file="$(find multiple_robots_stage)/params/move_base_config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find multiple_robots_stage)/params/move_base_config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find multiple_robots_stage)/params/move_base_config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find multiple_robots_stage)/params/move_base_config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find multiple_robots_stage)/params/move_base_config/base_local_planner_params.yaml" command="load" />
  </node>

  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>
</launch>
